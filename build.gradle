plugins {
    id("com.android.library") version "8.13.0" apply false
    id("org.jetbrains.kotlin.android") version "2.2.0" apply false
    id("org.jetbrains.kotlin.plugin.parcelize") version "2.2.0" apply false
    id("org.jetbrains.kotlin.plugin.serialization") version "2.2.0" apply false
    id("org.jetbrains.dokka") version "1.9.20" apply false
}

import org.jetbrains.dokka.gradle.DokkaTask
import org.jetbrains.dokka.gradle.DokkaMultiModuleTask

tasks.register("dokkaHtmlAll", DokkaTask) {
    outputDirectory.set(buildDir.resolve("dokka"))
    dokkaSourceSets.configureEach {
        includeNonPublic.set(false)
        samples.from("api/src/sample")
        includes.from("packages.md", "extra.md")
        jdkVersion.set(8)

        externalDocumentationLink {
            url.set(URL("https://developer.android.com/reference/androidx/"))
        }
        externalDocumentationLink {
            url.set(URL("https://developer.android.com/reference/"))
        }
    }
}

// Per-module Markdown docs
tasks.register("dokkaMarkdown", DokkaTask) {
    outputDirectory.set(file("docs"))
    dokkaSourceSets.configureEach {
        includeNonPublic.set(false)
        includes.from("packages.md", "extra.md")
        jdkVersion.set(8)

        externalDocumentationLink {
            url.set(URL("https://developer.android.com/reference/androidx/"))
        }
        externalDocumentationLink {
            url.set(URL("https://developer.android.com/reference/"))
        }
    }
}

tasks.register("dokkaHtmlAllModules", DokkaMultiModuleTask) {
    outputDirectory.set(buildDir.resolve("dokka-all"))
}

tasks.register("dokkaMarkdownAllModules", DokkaMultiModuleTask) {
    outputDirectory.set(buildDir.resolve("docs-all"))
}
tasks.register("clean", Delete) {
    delete(rootProject.buildDir)
}